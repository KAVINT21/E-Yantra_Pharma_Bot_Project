'''
*****************************************************************************************
*
*        =================================================
*             Pharma Bot Theme (eYRC 2022-23)
*        =================================================
*                                                         
*  This script is intended for implementation of Task 2A   
*  of Pharma Bot (PB) Theme (eYRC 2022-23).
*
*  Filename:			task_2a.py
*  Created:				
*  Last Modified:		8/10/2022
*  Author:				e-Yantra Team
*  
*  This software is made available on an "AS IS WHERE IS BASIS".
*  Licensee/end user indemnifies and will keep e-Yantra indemnified from
*  any and all claim(s) that emanate from the use of the Software or 
*  breach of the terms of this agreement.
*
*****************************************************************************************
'''

# Team ID:			[ Team-ID ]
# Author List:		[ Names of team members worked on this file separated by Comma: Name1, Name2, ... ]
# Filename:			task_2a.py
# Functions:		control_logic, detect_distance_sensor_1, detect_distance_sensor_2
# 					[ Comma separated list of functions in this file ]
# Global variables:	
# 					[ List of global variables defined in this file ]

####################### IMPORT MODULES #######################
## You are not allowed to make any changes in this section. ##
##############################################################
import  sys
import traceback
import time
import os
import math
from zmqRemoteApi import RemoteAPIClient
import zmq
##############################################################

def control_logic(sim):
	leftMotor = sim.getObjectHandle("left_joint")
	rightMotor = sim.getObjectHandle("right_joint")
	speed = 0.8
	sim.setJointTargetVelocity(leftMotor, speed)
	sim.setJointTargetVelocity(rightMotor, speed)
	cnt = 0
	c = 0
	cht = 0
	node=0

	while (speed > 0):

		d1 = sim.getObjectHandle("distance_sensor_1")
		d2 = sim.getObjectHandle("distance_sensor_2")
		front = sim.readProximitySensor(d1)
		side = sim.readProximitySensor(d2)

		print("side", side)
		print("front", front)
		# 0.0000000003968371601

		if (node>=10 and side[0]==1 and front[0]==1):
			speed=0.0
			sim.setJointTargetVelocity(leftMotor, speed)
			sim.setJointTargetVelocity(rightMotor, speed)
			break

		if (front[0] == 1 and side[0] == 1):
			cnt += 1
			c += 1
			print(cnt)
			if (cnt == 25):
				sim.setJointTargetVelocity(leftMotor, -speed)
				sim.setJointTargetVelocity(rightMotor, speed)
				node+=1

		elif (cnt > 27):
			cnt += 1
			print("cnt", cnt)

			if (front[0] == 0):

				cht += 1
				print("cht", cht)
				print("*****front****", front[1])

				if (cht == 11):
					sim.setJointTargetVelocity(leftMotor, speed)
					sim.setJointTargetVelocity(rightMotor, speed)
					print("*****front****", front[1])
					cnt = 0
					cht = 0

					print("------------------------------------------------------------------------------------------node:",node)

		elif (front[0] == 1 and side[0] == 0):
			cnt += 1
			c += 1
			print(cnt)
			if (cnt == 25):
				sim.setJointTargetVelocity(leftMotor, speed)
				sim.setJointTargetVelocity(rightMotor, -speed)
				node+=1




##################################################

def detect_distance_sensor_1(sim):
	"""
	Purpose:
	---
	Returns the distance of obstacle detected by proximity sensor named 'distance_sensor_1'

	Input Arguments:
	---
	sim    :   [ object ]
		ZeroMQ RemoteAPI object

	Returns:
	---
	distance  :  [ float ]
	    distance of obstacle from sensor

	Example call:
	---
	distance_1 = detect_distance_sensor_1(sim)
	"""
	distance = None
	##############  ADD YOUR CODE HERE  ##############




	##################################################
	return distance

def detect_distance_sensor_2(sim):
	"""
	Purpose:
	---
	Returns the distance of obstacle detected by proximity sensor named 'distance_sensor_2'

	Input Arguments:
	---
	sim    :   [ object ]
		ZeroMQ RemoteAPI object

	Returns:
	---
	distance  :  [ float ]
	    distance of obstacle from sensor

	Example call:
	---
	distance_2 = detect_distance_sensor_2(sim)
	"""
	distance = None
	##############  ADD YOUR CODE HERE  ##############




	##################################################
	return distance

######### YOU ARE NOT ALLOWED TO MAKE CHANGES TO THE MAIN CODE BELOW #########

if _name_ == "_main_":
	client = RemoteAPIClient()
	sim = client.getObject('sim')

	try:

		## Start the simulation using ZeroMQ RemoteAPI
		try:
			return_code = sim.startSimulation()
			if sim.getSimulationState() != sim.simulation_stopped:
				print('\nSimulation started correctly in CoppeliaSim.')
			else:
				print('\nSimulation could not be started correctly in CoppeliaSim.')
				sys.exit()

		except Exception:
			print('\n[ERROR] Simulation could not be started !!')
			traceback.print_exc(file=sys.stdout)
			sys.exit()

		## Runs the robot navigation logic written by participants
		try:
			control_logic(sim)
			time.sleep(5)

		except Exception:
			print('\n[ERROR] Your control_logic function throwed an Exception, kindly debug your code!')
			print('Stop the CoppeliaSim simulation manually if required.\n')
			traceback.print_exc(file=sys.stdout)
			print()
			sys.exit()

		
		## Stop the simulation using ZeroMQ RemoteAPI
		try:
			return_code = sim.stopSimulation()
			time.sleep(0.5)
			if sim.getSimulationState() == sim.simulation_stopped:
				print('\nSimulation stopped correctly in CoppeliaSim.')
			else:
				print('\nSimulation could not be stopped correctly in CoppeliaSim.')
				sys.exit()

		except Exception:
			print('\n[ERROR] Simulation could not be stopped !!')
			traceback.print_exc(file=sys.stdout)
			sys.exit()

	except KeyboardInterrupt:
		## Stop the simulation using ZeroMQ RemoteAPI
		return_code = sim.stopSimulation()
		time.sleep(0.5)
		if sim.getSimulationState() == sim.simulation_stopped:
			print('\nSimulation interrupted by user in CoppeliaSim.')
		else:
			print('\nSimulation could not be interrupted. Stop the simulation manually .')
			sys.exit()